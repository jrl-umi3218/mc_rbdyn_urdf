<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>api.h</name>
    <path>/home/runner/work/mc_rbdyn_urdf/mc_rbdyn_urdf/include/mc_rbdyn_urdf/</path>
    <filename>a00002</filename>
    <member kind="define">
      <type>#define</type>
      <name>MCRBDYNURDF_DLLIMPORT</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>a2cc1c3c9bca12a9bd13c3fb4bff8ee70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MCRBDYNURDF_DLLEXPORT</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>a04afe7e78ab14b905a281635d65d3600</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MCRBDYNURDF_API</name>
      <anchorfile>a00002.html</anchorfile>
      <anchor>a18a3ed32c5f243aa1a8c07fdaad78476</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>urdf.h</name>
    <path>/home/runner/work/mc_rbdyn_urdf/mc_rbdyn_urdf/include/mc_rbdyn_urdf/</path>
    <filename>a00005</filename>
    <includes id="a00002" name="api.h" local="no" imported="no">mc_rbdyn_urdf/api.h</includes>
    <class kind="struct">mc_rbdyn_urdf::Limits</class>
    <class kind="struct">mc_rbdyn_urdf::Geometry</class>
    <class kind="struct">mc_rbdyn_urdf::Geometry::Mesh</class>
    <class kind="struct">mc_rbdyn_urdf::Geometry::Box</class>
    <class kind="struct">mc_rbdyn_urdf::Geometry::Cylinder</class>
    <class kind="struct">mc_rbdyn_urdf::Geometry::Sphere</class>
    <class kind="struct">mc_rbdyn_urdf::Visual</class>
    <class kind="struct">mc_rbdyn_urdf::URDFParserResult</class>
    <namespace>mc_rbdyn_urdf</namespace>
    <member kind="function">
      <type>MCRBDYNURDF_API std::vector&lt; double &gt;</type>
      <name>attrToList</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>ad4a76014ea3d98c134a042d96809cc4e</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;dom, const std::string &amp;attr, const std::vector&lt; double &gt; &amp;def={})</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API Eigen::Vector3d</type>
      <name>attrToVector</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aa9f1ebd785896b5c138f6cec57d3efab</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;dom, const std::string &amp;attr, const Eigen::Vector3d &amp;def=Eigen::Vector3d(0, 0, 0))</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API Eigen::Matrix3d</type>
      <name>RPY</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a22562e857fafce2c632f3853d905048e</anchor>
      <arglist>(const double &amp;r, const double &amp;p, const double &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API rbd::Joint::Type</type>
      <name>rbdynFromUrdfJoint</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6a04f383260ca8d3b0d0cf7c906cb2f7</anchor>
      <arglist>(const std::string &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API sva::PTransformd</type>
      <name>originFromTag</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a629eb373d04fcef152f200779ce78006</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;root, const std::string &amp;tagName)</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API URDFParserResult</type>
      <name>rbdyn_from_urdf</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>af7c772d3c9b849d2224ab446a3fe1fd3</anchor>
      <arglist>(const std::string &amp;content, bool fixed=true, const std::vector&lt; std::string &gt; &amp;filteredLinksIn={}, bool transformInertia=true, const std::string &amp;baseLinkIn=&quot;&quot;, bool withVirtualLinks=true, const std::string sphericalSuffix=&quot;_spherical&quot;)</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API std::string</type>
      <name>parseMultiBodyGraphFromURDF</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a405459fdf14f8089f31d20102316fa78</anchor>
      <arglist>(URDFParserResult &amp;res, const std::string &amp;content, const std::vector&lt; std::string &gt; &amp;filteredLinksIn={}, bool transformInertia=true, const std::string &amp;baseLinkIn=&quot;&quot;, bool withVirtualLinks=true, const std::string sphericalSuffix=&quot;_spherical&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mc_rbdyn_urdf::Geometry::Box</name>
    <filename>a00653.html</filename>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>a00653.html</anchorfile>
      <anchor>ad6ac41f20812b7638b4427181ec9e300</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>size</name>
      <anchorfile>a00653.html</anchorfile>
      <anchor>adcee2c874b21b5ebdd8d2d4802b37edb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mc_rbdyn_urdf::Geometry::Cylinder</name>
    <filename>a00657.html</filename>
    <member kind="function">
      <type></type>
      <name>Cylinder</name>
      <anchorfile>a00657.html</anchorfile>
      <anchor>a353a5e9d4ef8f790d2da925365080ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>radius</name>
      <anchorfile>a00657.html</anchorfile>
      <anchor>a6b7fc33cb69b68e07f34abed0134369b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>length</name>
      <anchorfile>a00657.html</anchorfile>
      <anchor>a2008f62813eaeb02466088d9ff5202e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mc_rbdyn_urdf::Geometry</name>
    <filename>a00645.html</filename>
    <class kind="struct">mc_rbdyn_urdf::Geometry::Box</class>
    <class kind="struct">mc_rbdyn_urdf::Geometry::Cylinder</class>
    <class kind="struct">mc_rbdyn_urdf::Geometry::Mesh</class>
    <class kind="struct">mc_rbdyn_urdf::Geometry::Sphere</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730a45a2c7a3c24d93db15c6772f3c6448be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730a2375df63281425097a84870af9784d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730aa777331b9105d8c704ce1d845a28de12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730a8aebd84cb45bf6d202d00cd40f667d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730a83b8652ab17cc876e18e8cef9d741dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730a45a2c7a3c24d93db15c6772f3c6448be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CYLINDER</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730a2375df63281425097a84870af9784d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPHERE</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730aa777331b9105d8c704ce1d845a28de12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESH</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730a8aebd84cb45bf6d202d00cd40f667d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a991c06d670537792e7834e72140c9730a83b8652ab17cc876e18e8cef9d741dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Geometry</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a08129b929e93e09ea4f2ceb9241c238c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>a0a4afb1f3f01f2f62637324b346c3ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::variant&lt; Mesh, Box, Cylinder, Sphere &gt;</type>
      <name>data</name>
      <anchorfile>a00645.html</anchorfile>
      <anchor>aa3590b371b4a3aeb494350c99bd8d08b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mc_rbdyn_urdf::Limits</name>
    <filename>a00641.html</filename>
    <member kind="variable">
      <type>std::map&lt; std::string, std::vector&lt; double &gt; &gt;</type>
      <name>lower</name>
      <anchorfile>a00641.html</anchorfile>
      <anchor>aae1b2f43926c426ba1a591fcda3bae04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::vector&lt; double &gt; &gt;</type>
      <name>upper</name>
      <anchorfile>a00641.html</anchorfile>
      <anchor>ad306f23e14be3a020566e4a3eec0a36c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::vector&lt; double &gt; &gt;</type>
      <name>velocity</name>
      <anchorfile>a00641.html</anchorfile>
      <anchor>a153f91f1d7921845f432a5b553301bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::vector&lt; double &gt; &gt;</type>
      <name>torque</name>
      <anchorfile>a00641.html</anchorfile>
      <anchor>adb675d8cc5e101e20a299ef868b02550</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mc_rbdyn_urdf::Geometry::Mesh</name>
    <filename>a00649.html</filename>
    <member kind="function">
      <type></type>
      <name>Mesh</name>
      <anchorfile>a00649.html</anchorfile>
      <anchor>a0ae699ea8934f6943618b52d8c561a2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>a00649.html</anchorfile>
      <anchor>af849aa431bdc1d64fde5762d958c091d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>scale</name>
      <anchorfile>a00649.html</anchorfile>
      <anchor>a9fa240cbf7e394aa3d3c5e97e42af28c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mc_rbdyn_urdf::Geometry::Sphere</name>
    <filename>a00661.html</filename>
    <member kind="function">
      <type></type>
      <name>Sphere</name>
      <anchorfile>a00661.html</anchorfile>
      <anchor>aa0f64c79e1332bb760d6d4a7c8001234</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>radius</name>
      <anchorfile>a00661.html</anchorfile>
      <anchor>a3e9c79391c4c1efa2461fdc79b53c739</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mc_rbdyn_urdf::URDFParserResult</name>
    <filename>a00669.html</filename>
    <member kind="variable">
      <type>rbd::MultiBody</type>
      <name>mb</name>
      <anchorfile>a00669.html</anchorfile>
      <anchor>a403ade19b42e77dce10522387aaa2278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rbd::MultiBodyConfig</type>
      <name>mbc</name>
      <anchorfile>a00669.html</anchorfile>
      <anchor>a4659cfa1b016c83cfa85da50a7b4370a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rbd::MultiBodyGraph</type>
      <name>mbg</name>
      <anchorfile>a00669.html</anchorfile>
      <anchor>ac098a346642dae3d045b3611be182ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>mc_rbdyn_urdf::Limits</type>
      <name>limits</name>
      <anchorfile>a00669.html</anchorfile>
      <anchor>a6a856452663553e0d11f646bd23d4517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::vector&lt; mc_rbdyn_urdf::Visual &gt; &gt;</type>
      <name>visual</name>
      <anchorfile>a00669.html</anchorfile>
      <anchor>a5dc028b1275d5abac70c0a00469e7cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, sva::PTransformd &gt;</type>
      <name>collision_tf</name>
      <anchorfile>a00669.html</anchorfile>
      <anchor>ac8c4d777a2609e32608bcfb8dbe8e078</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mc_rbdyn_urdf::Visual</name>
    <filename>a00665.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>a00665.html</anchorfile>
      <anchor>a31060b46d0c247f2fbc69843a981cc8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sva::PTransformd</type>
      <name>origin</name>
      <anchorfile>a00665.html</anchorfile>
      <anchor>a282c6a06c5e4a75577e33dc054c0355d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Geometry</type>
      <name>geometry</name>
      <anchorfile>a00665.html</anchorfile>
      <anchor>a256eb0c67962f0e49c743df3314bef56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>mc_rbdyn_urdf</name>
    <filename>a00015.html</filename>
    <class kind="struct">mc_rbdyn_urdf::Geometry</class>
    <class kind="struct">mc_rbdyn_urdf::Limits</class>
    <class kind="struct">mc_rbdyn_urdf::URDFParserResult</class>
    <class kind="struct">mc_rbdyn_urdf::Visual</class>
    <member kind="function">
      <type>MCRBDYNURDF_API std::vector&lt; double &gt;</type>
      <name>attrToList</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>ad4a76014ea3d98c134a042d96809cc4e</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;dom, const std::string &amp;attr, const std::vector&lt; double &gt; &amp;def={})</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API Eigen::Vector3d</type>
      <name>attrToVector</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aa9f1ebd785896b5c138f6cec57d3efab</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;dom, const std::string &amp;attr, const Eigen::Vector3d &amp;def=Eigen::Vector3d(0, 0, 0))</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API Eigen::Matrix3d</type>
      <name>RPY</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a22562e857fafce2c632f3853d905048e</anchor>
      <arglist>(const double &amp;r, const double &amp;p, const double &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API rbd::Joint::Type</type>
      <name>rbdynFromUrdfJoint</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6a04f383260ca8d3b0d0cf7c906cb2f7</anchor>
      <arglist>(const std::string &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API sva::PTransformd</type>
      <name>originFromTag</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a629eb373d04fcef152f200779ce78006</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;root, const std::string &amp;tagName)</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API URDFParserResult</type>
      <name>rbdyn_from_urdf</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>af7c772d3c9b849d2224ab446a3fe1fd3</anchor>
      <arglist>(const std::string &amp;content, bool fixed=true, const std::vector&lt; std::string &gt; &amp;filteredLinksIn={}, bool transformInertia=true, const std::string &amp;baseLinkIn=&quot;&quot;, bool withVirtualLinks=true, const std::string sphericalSuffix=&quot;_spherical&quot;)</arglist>
    </member>
    <member kind="function">
      <type>MCRBDYNURDF_API std::string</type>
      <name>parseMultiBodyGraphFromURDF</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a405459fdf14f8089f31d20102316fa78</anchor>
      <arglist>(URDFParserResult &amp;res, const std::string &amp;content, const std::vector&lt; std::string &gt; &amp;filteredLinksIn={}, bool transformInertia=true, const std::string &amp;baseLinkIn=&quot;&quot;, bool withVirtualLinks=true, const std::string sphericalSuffix=&quot;_spherical&quot;)</arglist>
    </member>
  </compound>
</tagfile>
